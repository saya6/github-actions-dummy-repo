name: automatiza el proceso de relase
on:
  push:
    branches:
    - develop
jobs:
  Job1:
    name: Busqueda de palabra clave
    runs-on: ubuntu-latest
    steps:
    - name: verifica que el commit tenga la palabra listo_para_release
      if: ${{ !contains(github.event.head_commit.message, 'listo_para_release') }}
      run: exit 1

  Job2:
    needs: Job1
    name: Extracion del hash del commit actual
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.imprimir.outputs.sha_short }}
    steps:
    - name: ImprimirHash
      id: imprimirHash
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

  job3:
    needs: Job2
    name: Crea el branch de release
    runs-on: ubuntu-latest
    steps:
    - name: genera el branch de release
      run: |
      git checkout -b release-${{needs.Job2.outputs.hash}}
      git push -f -u origin release-${{needs.Job2.outputs.hash}}

  job4:
    needs: Job3
    name: Pruebas
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
      with:
        ref: release-${{needs.Job2.outputs.hash}}
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7'
    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Correr pruebas
      id: correr-pruebas
      run: python -m unittest -v tests/test_persona.py
    - name: Validar resultado con errores
      if: ${{ failure() }}
      env:
        MENSAJE_ERROR: Una o varias pruebas fallaron
      run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
    - name: Validar resultado sin errores
      if: ${{ success() }}
      env:
        MENSAJE_EXITO: Todas las pruebas fueron exitosas
      run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
    - name: Cálculo de cubrimiento
      id: cubrimiento
      run: |
          coverage run -m unittest tests/test_persona.py
          coverage report -m

  job4:
    needs: Job3
    name: mezcla del branch actual del release a master
    runs-on: ubuntu-latest
    steps:
    - name: Mezcla ${{ github.ref }} -> master
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: ${{ github.ref }}
        target-branch: master